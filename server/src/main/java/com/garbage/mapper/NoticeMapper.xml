<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.garbage.mapper.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.garbage.entity.Notice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, content, `image`, create_time
  </sql>
  <select id="pageQuery" parameterType="com.garbage.entity.Notice" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from notice
  <where>
    <if test="title != null and title != ''">
      and title like "%" #{title}
    </if>
  </where>
  order by create_time desc
</select>
  <select id="getAll"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `notice`
    order by create_time desc
  </select>

  <select id="getById" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `notice`
    where id = #{id}
  </select>
    <select id="getNoticeLimit8" resultType="com.garbage.entity.Notice">
      select
      <include refid="Base_Column_List"/>
      from `notice`
      order by create_time desc limit 0, 8
    </select>

    <delete id="delete" parameterType="java.lang.Long">
    delete from notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.garbage.entity.Notice" useGeneratedKeys="true">
    insert into notice (title, content, `image`,
      create_time)
    values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{image,jdbcType=CHAR},
      #{createTime,jdbcType=VARCHAR})
  </insert>
  <update id="update" parameterType="com.garbage.entity.Notice">
    update notice
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      `image` = #{image,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
